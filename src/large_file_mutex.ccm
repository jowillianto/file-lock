module;
#include <filesystem>
#include <unistd.h>
export module file_lock:large_file_mutex;
import :shared_mutex;
import :basic_mutex;
import :sys_file_lock;

namespace file_lock {
  export class LargeFileMutex {
  private:
    std::filesystem::path _file_path;
    std::filesystem::path _lock_file_path;
    FileMutex _file_lock;

  public:
    LargeFileMutex(const std::filesystem::path &file_path);
    LargeFileMutex(const std::string &file_path);

    void lock();
    void unlock();
    bool try_lock();

    void lock_shared();
    void unlock_shared();
    bool try_lock_shared();

    SysFileLock &file_lock();
    const std::filesystem::path &protected_path() const;
    std::string protected_path_string() const;
  };

  static_assert(SharedMutex<LargeFileMutex>);
};