module;
#include <filesystem>
#include <string>
export module file_lock:sys_file_lock;
import :shared_mutex;

namespace file_lock {
  export class SysFileLock {
  private:
    std::filesystem::path _file_path;
    int _fd;

    void _throw_sys_error();
    void _open_file_and_absol_path(int additional_flags);

  public:
    SysFileLock(const std::filesystem::path &file_path);
    SysFileLock(const std::string &file_path);

    void lock();
    void unlock();
    bool try_lock();

    void lock_shared();
    void unlock_shared();
    bool try_lock_shared();

    const std::filesystem::path &protected_path() const;
    std::string protected_path_string() const;

    ~SysFileLock();
  };
  static_assert(SharedMutex<SysFileLock>);
}